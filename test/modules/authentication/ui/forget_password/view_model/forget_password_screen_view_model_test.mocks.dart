// Mocks generated by Mockito 5.4.6 from annotations
// in flower_tracking_app/test/modules/authentication/ui/forget_password/view_model/forget_password_screen_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:flower_tracking_app/core/apis/api_result/api_result.dart'
    as _i7;
import 'package:flower_tracking_app/modules/authentication/data/models/forget_password/forget_password_response.dart'
    as _i8;
import 'package:flower_tracking_app/modules/authentication/domain/repositories_contracts/forget_password/forget_password_repo.dart'
    as _i2;
import 'package:flower_tracking_app/modules/authentication/domain/repositories_contracts/forget_password/reset_code_repo.dart'
    as _i4;
import 'package:flower_tracking_app/modules/authentication/domain/repositories_contracts/forget_password/reset_password_repo.dart'
    as _i3;
import 'package:flower_tracking_app/modules/authentication/domain/use_cases/forget_password/forget_password_use_case.dart'
    as _i5;
import 'package:flower_tracking_app/modules/authentication/domain/use_cases/forget_password/reset_code_use_case.dart'
    as _i11;
import 'package:flower_tracking_app/modules/authentication/domain/use_cases/forget_password/reset_password_use_case.dart'
    as _i10;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeForgetPasswordRepo_0 extends _i1.SmartFake
    implements _i2.ForgetPasswordRepo {
  _FakeForgetPasswordRepo_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResetPasswordRepo_1 extends _i1.SmartFake
    implements _i3.ResetPasswordRepo {
  _FakeResetPasswordRepo_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResetCodeRepo_2 extends _i1.SmartFake implements _i4.ResetCodeRepo {
  _FakeResetCodeRepo_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ForgetPasswordUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockForgetPasswordUseCase extends _i1.Mock
    implements _i5.ForgetPasswordUseCase {
  MockForgetPasswordUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ForgetPasswordRepo get forgetPasswordRepo =>
      (super.noSuchMethod(
            Invocation.getter(#forgetPasswordRepo),
            returnValue: _FakeForgetPasswordRepo_0(
              this,
              Invocation.getter(#forgetPasswordRepo),
            ),
          )
          as _i2.ForgetPasswordRepo);

  @override
  set forgetPasswordRepo(_i2.ForgetPasswordRepo? _forgetPasswordRepo) =>
      super.noSuchMethod(
        Invocation.setter(#forgetPasswordRepo, _forgetPasswordRepo),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<_i7.ApiResult<_i8.ForgetPasswordResponse?>> call(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#call, [email]),
            returnValue:
                _i6.Future<_i7.ApiResult<_i8.ForgetPasswordResponse?>>.value(
                  _i9.dummyValue<_i7.ApiResult<_i8.ForgetPasswordResponse?>>(
                    this,
                    Invocation.method(#call, [email]),
                  ),
                ),
          )
          as _i6.Future<_i7.ApiResult<_i8.ForgetPasswordResponse?>>);
}

/// A class which mocks [ResetPasswordUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockResetPasswordUseCase extends _i1.Mock
    implements _i10.ResetPasswordUseCase {
  MockResetPasswordUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.ResetPasswordRepo get resetPasswordRepo =>
      (super.noSuchMethod(
            Invocation.getter(#resetPasswordRepo),
            returnValue: _FakeResetPasswordRepo_1(
              this,
              Invocation.getter(#resetPasswordRepo),
            ),
          )
          as _i3.ResetPasswordRepo);

  @override
  set resetPasswordRepo(_i3.ResetPasswordRepo? _resetPasswordRepo) =>
      super.noSuchMethod(
        Invocation.setter(#resetPasswordRepo, _resetPasswordRepo),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<_i7.ApiResult<_i8.ForgetPasswordResponse?>> call(
    String? email,
    String? newPassword,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#call, [email, newPassword]),
            returnValue:
                _i6.Future<_i7.ApiResult<_i8.ForgetPasswordResponse?>>.value(
                  _i9.dummyValue<_i7.ApiResult<_i8.ForgetPasswordResponse?>>(
                    this,
                    Invocation.method(#call, [email, newPassword]),
                  ),
                ),
          )
          as _i6.Future<_i7.ApiResult<_i8.ForgetPasswordResponse?>>);
}

/// A class which mocks [ResetCodeUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockResetCodeUseCase extends _i1.Mock implements _i11.ResetCodeUseCase {
  MockResetCodeUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.ResetCodeRepo get resetCodeRepo =>
      (super.noSuchMethod(
            Invocation.getter(#resetCodeRepo),
            returnValue: _FakeResetCodeRepo_2(
              this,
              Invocation.getter(#resetCodeRepo),
            ),
          )
          as _i4.ResetCodeRepo);

  @override
  set resetCodeRepo(_i4.ResetCodeRepo? _resetCodeRepo) => super.noSuchMethod(
    Invocation.setter(#resetCodeRepo, _resetCodeRepo),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<_i7.ApiResult<_i8.ForgetPasswordResponse?>> call(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#call, [code]),
            returnValue:
                _i6.Future<_i7.ApiResult<_i8.ForgetPasswordResponse?>>.value(
                  _i9.dummyValue<_i7.ApiResult<_i8.ForgetPasswordResponse?>>(
                    this,
                    Invocation.method(#call, [code]),
                  ),
                ),
          )
          as _i6.Future<_i7.ApiResult<_i8.ForgetPasswordResponse?>>);
}
