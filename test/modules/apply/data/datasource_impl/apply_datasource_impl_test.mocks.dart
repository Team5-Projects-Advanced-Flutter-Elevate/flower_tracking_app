// Mocks generated by Mockito 5.4.6 from annotations
// in flower_tracking_app/test/modules/apply/data/datasource_impl/apply_datasource_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flower_tracking_app/modules/apply/data/api/api_client/apply_api_client.dart'
    as _i4;
import 'package:flower_tracking_app/modules/apply/data/models/apply_response.dart'
    as _i2;
import 'package:flower_tracking_app/modules/apply/data/models/vehicle_response.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApplyResponse_0 extends _i1.SmartFake implements _i2.ApplyResponse {
  _FakeApplyResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeVehicleResponse_1 extends _i1.SmartFake
    implements _i3.VehicleResponse {
  _FakeVehicleResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ApplyApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockApplyApiClient extends _i1.Mock implements _i4.VehicleApiClient {
  MockApplyApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.ApplyResponse> applyDriver(_i2.DriverRequestModel? model) =>
      (super.noSuchMethod(
            Invocation.method(#applyDriver, [model]),
            returnValue: _i5.Future<_i2.ApplyResponse>.value(
              _FakeApplyResponse_0(
                this,
                Invocation.method(#applyDriver, [model]),
              ),
            ),
          )
          as _i5.Future<_i2.ApplyResponse>);

  @override
  _i5.Future<_i3.VehicleResponse> getVehicles() =>
      (super.noSuchMethod(
            Invocation.method(#getVehicles, []),
            returnValue: _i5.Future<_i3.VehicleResponse>.value(
              _FakeVehicleResponse_1(this, Invocation.method(#getVehicles, [])),
            ),
          )
          as _i5.Future<_i3.VehicleResponse>);
}
